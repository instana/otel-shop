apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-ratings
  labels:
    service: {{ .Release.Name }}-ratings
spec:
  replicas: 1
  selector:
    matchLabels:
      service: {{ .Release.Name }}-ratings
  template:
    metadata:
      labels:
        service: {{ .Release.Name }}-ratings
    spec:
      {{ if .Values.psp.enabled }}
      serviceAccountName: {{ .Release.Name }}
      {{ end }}
      containers:
      - name: {{ .Release.Name }}-ratings
        image: {{ .Values.image.repo }}/{{ .Values.image.prefix }}-ratings:{{ .Values.image.version }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: CATALOGUE_URL
            value: http://{{ .Release.Name }}-catalogue:8080
          - name: PDO_URL
            value: 'mysql:host={{ .Release.Name }}-mysql;dbname=ratings;charset=utf8mb4'
          - name: INSTANA_AGENT_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: {{ .Values.opentelemetry.exporter.otlp.endpoint }}
          {{- if ne .Values.opentelemetry.exporter.otlp.headers "" }}
          - name: OTEL_EXPORTER_OTLP_HEADERS
            value: {{ .Values.opentelemetry.exporter.otlp.headers }}
          {{- end }}
          - name: OTEL_SERVICE_NAME
            value: {{ .Release.Name }}-ratings
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
        readinessProbe:
          httpGet:
            path: /health-check
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30
          successThreshold: 1
      - name: {{ .Release.Name }}-ratings-otelcol-sidecar
        image: {{ .Values.image.repo }}/{{ .Values.image.prefix }}-otel-collector:{{ .Values.image.version }}
        args:
        - --config=/conf/agent.yaml
        volumeMounts:
        - mountPath: /conf
          name: {{ .Release.Name }}-agent-config
      volumes:
      - configMap:
          items:
          - key: agent.yaml
            path: agent.yaml
          name: {{ .Release.Name }}-agent-config
        name: {{ .Release.Name }}-agent-config
      restartPolicy: Always
