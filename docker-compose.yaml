version: "3"
services:
  mongodb:
    build:
      context: mongo
    image: ${REPOSITORY}-mongodb:${PROJECT_VERSION}
    networks:
      app-network:
    logging: &logging
      driver: "json-file"
      options:
        max-size: "25m"
        max-file: "2"

  redis:
    image: redis:6.2-alpine
    networks:
      app-network:
    logging:
      <<: *logging

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    networks:
      app-network:
    logging:
      <<: *logging

  mysql:
    build:
      context: mysql
    image: ${REPOSITORY}-mysql-db:${PROJECT_VERSION}
    cap_add:
      - NET_ADMIN
    networks:
      app-network:
    healthcheck:
      test: ["CMD", "mysqladmin", "-uratings", "-piloveit", "-h", "localhost", "ping"]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

  dispatch:
    build:
      context: dispatch
    image: ${REPOSITORY}-dispatch:${PROJECT_VERSION}
    depends_on:
      - rabbitmq
    networks:
      app-network:
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: ${collector_host:?No OpenTelemetry collector host specified}:${collector_port:?No OpenTelemetry collector port specified}
      OTEL_SERVICE_NAME: otel-shop-dispatch
    logging:
      <<: *logging

  front:
    image: ${REPOSITORY}-front:${PROJECT_VERSION}
    build:
      context: front
    depends_on:
      - catalogue
      - ratings
      - user
      - web
    environment:
      WEB_HOST: web
      CATALOGUE_HOST: catalogue
      CART_HOST: cart
      PAYMENT_HOST: payment
      SHIPPING_HOST: shipping
      RATINGS_HOST: ratings
      USER_HOST: user
      OTEL_EXPORTER_OTLP_ENDPOINT: ${collector_host:?No OpenTelemetry collector host specified}:${collector_port:?No OpenTelemetry collector port specified}
      OTEL_SERVICE_NAME: otel-shop-front
    volumes:
      - ./front/conf/otel-nginx.toml:/conf/otel-nginx.toml
    networks:
      app-network:
    ports:
      - "8000:80"
    command:
      - /usr/sbin/nginx
      - -g
      - daemon off;
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-H",
          "X-INSTANA-SYNTHETIC: 1",
          "-f",
          "http://localhost/health-check",
        ]
      interval: 10s
      timeout: 10s
      retries: 3

  web:
    image: ${REPOSITORY}-web:${PROJECT_VERSION}
    build:
      context: web
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: ${collector_host:?No OpenTelemetry collector host specified}:${collector_port:?No OpenTelemetry collector port specified}
      OTEL_SERVICE_NAME: otel-shop-web
    volumes:
      - ./web/conf/opentelemetry.conf:/etc/apache2/mods-available/opentelemetry.conf
      - ./web/html:/var/www/html
    networks:
      app-network:

  cart:
    build:
      context: cart
    image: ${REPOSITORY}-cart:${PROJECT_VERSION}
    depends_on:
      - redis
    networks:
      app-network:
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: ${collector_host:?No OpenTelemetry collector host specified}:${collector_port:?No OpenTelemetry collector port specified}
      OTEL_SERVICE_NAME: otel-shop-cart
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-H",
          "X-INSTANA-SYNTHETIC: 1",
          "-f",
          "http://localhost:8080/health-check",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

  catalogue:
    build:
      context: catalogue
    image: ${REPOSITORY}-catalogue:${PROJECT_VERSION}
    depends_on:
      - mongodb
    networks:
      app-network:
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: ${collector_host:?No OpenTelemetry collector host specified}:${collector_port:?No OpenTelemetry collector port specified}
      OTEL_SERVICE_NAME: otel-shop-catalogue
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-H",
          "X-INSTANA-SYNTHETIC: 1",
          "-f",
          "http://localhost:8080/health-check",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

  user:
    build:
      context: user
    image: ${REPOSITORY}-user:${PROJECT_VERSION}
    depends_on:
      - mongodb
      - redis
    networks:
      app-network:
    environment:
      REDIS_URL: redis://redis:6379
      MONGO_URL: mongodb://mongodb:27017/users
      OTEL_EXPORTER_OTLP_ENDPOINT: ${collector_host:?No OpenTelemetry collector host specified}:${collector_port:?No OpenTelemetry collector port specified}
      OTEL_SERVICE_NAME: otel-shop-user
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-H",
          "X-INSTANA-SYNTHETIC: 1",
          "-f",
          "http://localhost:8080/health-check",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

  ratings:
    build:
      context: ratings
    image: ${REPOSITORY}-ratings:${PROJECT_VERSION}
    environment:
      APP_ENV: prod
      CATALOGUE_URL: http://catalogue:8080
      PDO_URL: mysql:host=mysql;dbname=ratings;charset=utf8mb4
      OTEL_EXPORTER_OTLP_ENDPOINT: ${collector_host:?No OpenTelemetry collector host specified}:${collector_port:?No OpenTelemetry collector port specified}
      OTEL_PROPAGATORS: w3c
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_SERVICE_NAME: otel-shop-ratings
    networks:
      app-network:
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-H",
          "X-INSTANA-SYNTHETIC: 1",
          "-f",
          "http://localhost/health-check",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

  payment:
    build:
      context: payment
    image: ${REPOSITORY}-payment:${PROJECT_VERSION}
    depends_on:
      - rabbitmq
    networks:
      app-network:
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: http://${collector_host:?No OpenTelemetry collector host specified}:${collector_port:?No OpenTelemetry collector port specified}
      OTEL_SERVICE_NAME: otel-shop-payment
      OTEL_TRACES_EXPORTER: otlp_proto_grpc
      OTEL_RESOURCE_ATTRIBUTES: service.name=otel-shop-payment
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-H",
          "X-INSTANA-SYNTHETIC: 1",
          "-f",
          "http://localhost:8080/health-check",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
    # Uncomment to change payment gateway
    #environment:
    #PAYMENT_GATEWAY: "https://www.worldpay.com"
    logging:
      <<: *logging

  shipping:
    build:
      context: shipping
    image: ${REPOSITORY}-shipping:${PROJECT_VERSION}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      app-network:
    environment:
      CART_ENDPOINT: cart:8080
      DB_HOST: mysql
      REDIS_URL: redis://redis:6379
      OTEL_EXPORTER_OTLP_ENDPOINT: http://${collector_host:?No OpenTelemetry collector host specified}:${collector_port:?No OpenTelemetry collector port specified}
      OTEL_SERVICE_NAME: otel-shop-shipping
      OTEL_TRACES_SAMPLER: always_on
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-H",
          "X-INSTANA-SYNTHETIC: 1",
          "-f",
          "http://localhost:8080/health-check",
        ]
      interval: 10s
      timeout: 10s
      retries: 3
    logging:
      <<: *logging

networks:
  app-network: {}
